---
title: "01-Baby Steps"
author: "Ottavia M. Epifania"
format: 
  revealjs: 
    theme: mytheme.scss
    # logo: "www/psicostat.jpg"
    footer: "Baby steps"
    transition: none
    transition-speed: slow
    background-transition: fade
    slide-number: true
    show-slide-number: print
stand-alone: true
editor_options: 
  chunk_output_type: console
execute: 
  fig-align: center
  out-width: 80%
---

```{r}
#| include: false
#| label: setup

library(emoji)
```



# YAML 

## 

The overall appearance and behavior of the document is specified in the YAML: 

::: {.callout-note collapse="true"}

## HTML default YAML

````
---
title: "Untitled"
format: html
editor: visual
---
````
:::


. . . 

::: {.callout-note collapse="true"}

## PDF default YAML

````
---
title: "Untitled"
format: pdf
editor: visual
---
````
:::

## Source vs. Visual




:::{.panel-tabset}

## Editor
```{r}
knitr::include_graphics("img/q_source.png")
```




## Visual
```{r}
knitr::include_graphics("img/q_visual.png")
```

:::


## YAML: Table of Contents (toc)

````
---
title: "My quarto file"
author: "Jane Doe"
date: today
format: 
  html:
    self-contained: true
    toc: true
    toc-title: My contents
    toc-location: left
editor: source
lang: it
---
````

`self-contained: true` is of the uttermost importance!!!

(Further details on the YAML later on)

# Markdown formatting 

## Headings 

```{markdown}
#| echo: true
#| eval: true

# First level
```

<br>


```{markdown}
#| echo: true
#| eval: true

## Second level
```

<br>

```{markdown}
#| echo: true
#| eval: true

### Third level
```

<br>

```{markdown}
#| echo: true
#| eval: true

#### Fourth level
```

<br>

```{markdown}
#| echo: true
#| eval: true

##### Fifth level
```

<br>

```{markdown}
#| echo: true
#| eval: true

##### Sixth level
```



## Text Formatting




**Markdown syntax: Font**


```{markdown}
#| eval: true
#| echo: true
*italics*, **bold**, **bold italics** 
```


Output

*italics*, **bold**, **bold italics** 


. . . 

**Markdown syntax: Scripts**


```{markdown}
#| eval: false
#| echo: true
textsuperscirpt^2^, textunderscript~2~
```


Output


textsuperscirpt^2^, textunderscript~2~

. . . 


**Markdown syntax: In line code**

```{markdown}
#| eval: false
#| echo: true
`this is myinline code`
```

Output


`this is myinline code`




## Links and images 


```{markdown}
#| echo: true
#| eval: false

<https://github.com/>
```

<br>

<https://github.com/>

<br>

```{markdown}
#| echo: true
#| eval: false

My link is [here](https://github.com/)
```

<br>

My link is [here](https://github.com/)

<br> 

```{markdown}
#| echo: true
#| eval: false

![This is an image](img/picture.jpg)
```


![This is an image](img/picture.jpg)

## Lists 


:::: {.columns}

:::{.column width=50%}

```{markdown}
#| echo: true
#| eval: false

* unordered list
  + sub-item 1
  + sub-item 2
    - sub-sub-item 1
```

<br>

<br>

```{markdown}
#| echo: true
#| eval: false

1. ordered list
2. item 2
   i) sub-item 1
      A.  sub-sub-item 1
```


<br>


<br>


<br>

```{markdown}
#| echo: true
#| eval: false

- [ ] First things first 1
- [ ] Second things second 2
```




:::

:::{.column width=50%}

* unordered list
  + sub-item 1
  + sub-item 2
    - sub-sub-item 1
    

1. ordered list
2. item 2
   i) sub-item 1
      A.  sub-sub-item 1

<br>      
      

- [ ] First things first 1
- [ ] Second things second 2
:::


:::: 

## Math 

In-line math: 

```{markdown}
#| echo: true
#| eval: false

This is an in-line equation $y = \beta_0 + \beta_1 X + \varepsilon$

```


This is an in-line equation $y = \beta_0 + \beta_1 X + \varepsilon$

. . . 

Math math: 

```{markdown}
#| echo: true
#| eval: false

This is an  equation $$z = \dfrac{\bar{x} -\mu}{\sigma}$$

```

This is an  equation $$z = \dfrac{\bar{x} -\mu}{\sigma}$$





# Publish your HTML document (with GitHub)

## GitHub pages 

Navigate to your GitHub repository online: 

```{r}
knitr::include_graphics("img/pages-git.png")
```

## It worked! 


```{r}
knitr::include_graphics("img/pages.png")
```

(take some time, be patient)

## `README.md` 


This file handles the generation of the website

It works with basic markdown syntax 

::: {.panel-tabset}
## `README.md` 

```{r}
#| fig-align: center
#| out-width: 110%
knitr::include_graphics(path = "img/readme.png")
```

## Site appearance
```{r}
#| fig-align: center
#| out-width: 110%
knitr::include_graphics(path = "img/site.png")
```

:::


## Links

They create the index to the pages we want to display in our website 

::: {.callout-warning}

The links **must** link to the directory of the html file in the subfolder of the project!
:::

. . . 

Let's say we want to create a link to `my_file.html` that is inside the
`files` subfolder: 

```{markdown}
#| eval: false
#| echo: true

[My presentation](files/my_file.html)
```

Don't forget to save the changes in the `README.md` file 

## `commit` + `push`


```{r out.width="70%"}
knitr::include_graphics("img/commit1.png")
```

## 

```{r out.width="70%"}
knitr::include_graphics("img/commit2.png")
```

Don't forget to push!

## Check

<br>

```{r out.width="80%"}
knitr::include_graphics("img/check-commit.png")
```


## Your turn!

Inside your R project for this school: 

* Create a new HMTL quarto document that must contain:
   + 3 sections (level I heading), each with a subsection (level II heading)
   + Place a picture with a caption in one of the subsection
   + Place an unordered list 

* Render the document in HTML 

* Create the link to your newly created document in the `README.md`

* Commit & push the `.qmd` and `.html` of your newly created document

* Commit & push the `.md` and `.html`of the `README` file 




# Layout

## 

By default, the HTML document is set to take all the space in the page

```{markdown}
#| echo: true
#| eval: false
format: 
  html:
    page-layout: full
```



```{r}
#| eval: true
#| fig-align: center
knitr::include_graphics("img/basic-layout.png")
```

## Custom layout with grid 

The page layout is based on a 12-unit (or 12-column) grid system, which can be used to divide the space accordingly: 

```{markdown}
#| echo: true
#| eval: false
::: {.grid}

::: {.g-col-4}

First column, 4/12 of the toal width

:::

::: {.g-col-8}

Second column, 8/12 of the total width 

:::

:::
```

(Best for HTML pages)

## Columns

::: {.panel-tabset}

## Code

```{markdown}
#| echo: true
#| eval: false
:::: {.columns}


::: {.column width="50%"}

This is my first column!

:::

::: {.column width="50%"}

And this is the second column
:::

::::
```

## Output


:::: {.columns}

::: {.column width="50%"}

This is my first column!

:::

::: {.column width="50%"}

And this is the second column
:::

::::

:::

(Best for HMTL presentation)

## tabset: code



```{markdown}
#| echo: true
#| eval: false
::: {.panel-tabset}

## Aim

Here I present the aim of the study 

## Methods

Here I present the methods used to pursue the aim

## Results

And here I present the results

:::
```


## tabset: output

::: {.panel-tabset}


## Aim

Here I present the aim of the study 

## Methods

Here I present the methods used to pursue the aim

## Results


And here I present the results

::: 

## Document layout 

::: {.panel-tabset}

## A document

```{r}
knitr::include_graphics("img/adavanced-layout.png")
```


## Code

```{markdown}
#| eval: false
#| echo: true
format: 
  html: 
   toc: true
   toc-location: left
   grid:
    sidebar-width: 300px
    body-width: 900px
    margin-width: 300px
    gutter-width: 1.5rem
```


:::


## Margins 

You can place anything in the margins of the documents!


```{markdown}
#| eval: false
#| echo: true

:::{.column-margin}
I want this piscture displayed in the margin 


![](img/peacock.png)
:::
```

```{r}
#| fig-align: center
#| out-width: 90%
knitr::include_graphics("img/margins.png")
```


## Your turn

From the previous document:

* In one of the sections, create a grid dividing the space in 3 intervals of different width 
* Place a picture in each of the three intervals
* In a subsection: 
 + Create a panel tabset with 3 tabs (like Introduction, Methods, Results)
 + Add a picture in the margin of the document

