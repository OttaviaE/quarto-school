---
title: "00-Hello"
author: "Ottavia M. Epifania"
format: 
  revealjs: 
    theme: mytheme.scss
    # logo: "www/psicostat.jpg"
    footer: "The ARCA initiative summer school"
    transition: none
    transition-speed: slow
    background-transition: fade
    slide-number: true
    show-slide-number: print
stand-alone: true
editor_options: 
  chunk_output_type: console
execute: 
  fig-align: center
  out-width: 80%
---

```{r setup}
#| include: false

library(emoji)
```


# Quarto 

## What is it?

<br>


[R Markdown](https://rmarkdown.rstudio.com/), next generation

<br>


All based on [knitr](https://cran.r-project.org/web/packages/knitr/index.html) to execute R code

. . . 

> Analyze. Share. Reproduce. You have a story to tell with dataâ€”tell it with Quarto.

. . . 

In this course: RStudio! 

Download R: [https://cran.r-project.org/bin/windows/base/](https://cran.r-project.org/bin/windows/base/)

Download RStudio: [https://posit.co/download/rstudio-desktop/](https://posit.co/download/rstudio-desktop/)

## R Markdown


`markdown` is a markup languange: Programming language where formatting is handled by chunk codes, `tags` 

<br>

`markdown`: `.md`

`R Markdown`: `.Rmd`

`quarto`: `.qmd`

## markup languages 

:::: {.columns}

:::{.column width="50%"}
```{r}
#| out-width: 90%
#| fig-cap: HTML editor
knitr::include_graphics("img/html-example.png")
```

:::

:::{.column width="50%"}
```{r}
#| out-width: 90%
#| fig-cap: LaTex Editor
knitr::include_graphics("img/latex.png")
```

:::

::::

## WYSIWYG languages

What You See Is What You Get

The text is modified with built-in command, you can see immediately the changes: 

```{r}
#| out-width: 80%
knitr::include_graphics("img/word.png")
```


## Why? 

Using knitr, it allows for integrating analyses, text, and graphs in a single document: 

- Replicability 

- Tydiness 

- Convenience 

Create dynamic content with Python, R, Julia, and Observable

## An example


::: {.r-stack}

:::{.fragment .fade-out}

```{r}
#| echo: false
#| out-width: 100%
#| warning: false
#| message: false
#| 

library(ggplot2)

ggplot(rock, 
         aes(x = peri, y = perm, size = area)) + geom_point()
```

:::


::: {.fragment .fade-in-then-out}
But you are asked to change the ggplot theme!

Using a WYSIWYG: 

1. Re-open R

2. Find the data again 

3. Re-run the analysis 

4. Plot the results with the requested changes 

5. Save the plot 

6. Import the plot in the document
:::

::: {.fragment .fade-in-then-out}
Plus, can be interactive:

```{r}
#| echo: false
#| out-width: 300%
#| warning: false
#| message: false


library(ggplot2)
library(plotly)

ggplotly(ggplot(rock, 
         aes(x = peri, y = perm, size = area)) + geom_point() + theme_light())

```


:::
:::

# Let's get started `r emoji("partying face")`

## Be tidy: `Rstudio` Project

Create a directory that can be re-organized in subdirectories, allowing for a conveninet managment of all the files (data, images, bibliography)


File $\rightarrow$ New project: 

```{r}
#| fig-align: center
#| out-width: 79%

knitr::include_graphics("img/project1.png")
```



## 

:::: {.columns}

::: {.column width=50%}
What?
```{r}
#| fig-align: center
#| out-width: 79%
knitr::include_graphics("img/project2.png")
```

:::

::: {.column width=50%}
Where?
```{r}
#| fig-align: center
#| out-width: 79%
knitr::include_graphics("img/project3.png")
```

:::

::::

# GitHub (also know as "Nerdstagram")

##

```{r}
#| out-width: 5%
#| fig-align: center

knitr::include_graphics("img/gh.png")

```


[https://github.com/](https://github.com/)

It is needed to create sharable html documents 

It allows to share your code (and your projects) with others



## Create an account

::: {.r-stack}

::: {.fragment .fade-out}

```{r}
#| out-width: 90%
#| fig-align: center
knitr::include_graphics("img/ghMail.png")
```
:::

::: {.fragment .fade-in-then-out}

```{r}
#| out-width: 90%
#| fig-align: center
knitr::include_graphics("img/ghMail1.png")
```
:::

:::

## Username and password

Please, choose something that you can remember

<br>


```{r}
knitr::include_graphics("img/ghMailpwd.png")
```


Solve the CAPTCHA and submit


## GitHub Desktop 

[https://desktop.github.com/](https://desktop.github.com/)

<br>


```{r}
knitr::include_graphics("img/ghDesk.png")
```


## Installare Git {.build}

GitHub desktop allows for an "inderect" connection between RStudio and GitHub 

[Git](https://gitforwindows.org/) allows for a direct connection between RStudio and GitHub 

Just follow the default installation

. . . 

If it worked: 

```{r}
#| fig-align: center
#| out-width: 80%
knitr::include_graphics("img/check.png")
```


## "Clone" an existing repository I 

From GitHub desktop: 

**Add Local Repository** $\rightarrow$ search for the directory of the R project to publish on GitHub

```{r out.width="80%"}
knitr::include_graphics("img/banner-git.png")
```


## "Clone" an existing repository II

Option: **create a repository** 

```{r}
knitr::include_graphics("img/clone-repo.png")
```


## Did it work? 

Navigate to you GitHub profile on [https://github.com/](https://github.com/) and to your repositories: 

```{r}
#| fig-align: center
knitr::include_graphics("img/myGit.png")
```


 


## The repository must be public

```{r out.width="90%"}
knitr::include_graphics("img/public.png")
```


## Your turn!

1. Create a default R project for this course 

2. Create a GitHub account (and install Git and GitHub desktop)

3. Add the project you have created for this course to your GitHub account

4. Check whether the repository is available online and make it public 


<br>

Final check: Download [this file](my-first-quarto-document.qmd), open it in your newly created project and: 

```{r}
#| out-width: 50%
knitr::include_graphics("img/render.png")
```

